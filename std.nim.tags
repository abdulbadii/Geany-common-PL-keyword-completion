# format=pipe
add()|||
addr |||
and |||
asm|||
auto|||
bind|||
block:|||
bool|||
break|||
captures|||
captureBounds|||
case |||
cast[|||
char|||
close(|||
commandLineParams()|||
concept|||
const |||
contains()|||
continue|||
converter|||
dec()|||
defer:|||
discard|||
distinct|||
div|||
dumpAstGen:
echo |||
echo "\n==",,"=*=\n=",,"="|||
elif |||
else:|||
end|||
enum|||
except:|||
export|||
false|||
finally:|||
find( )|||
findAll|||
flushFile(|||
float |||
for i in |||
from|||
func |||
get()|||
getch()|||
get.captures.toSeq|||
getFilePos(|||
getFileSize()|||
getOsFileHandle(|||
import |||
inc()|||
include |||
inject|||
inline|||
int|||
interface|||
isNone:|||
isnot|||
isSome:|||
iterator |||
let |||
len|||
lines()|||
macro|||
match|||
method|||
mixin|||
mod|||
nil|||
not |||
notin |||
object|||
open(|||
out|||
proc |||
ptr |||
quit("YUP",0)|||
raise |||
readAll(|||
readBuffer(|||
readBytes(|||
readChar(|||
readChars(|||
readFile()|||
readline|||
readLines()|||
readLine(stdin)|||
ref |||
reopen()|||
replace()|||
repr|||
reset|||
result = quote do:|||
return|||
setlen(0)|||
shl|||
shr|||
static|||
stderr|||
stdmsg()|||
stdout|||
string|||
template |||
true:|||
try:|||
tuple|||
typed|||
type()|||
uint|||
untyped|||
unsafeAddr(|||
using |||
var |||
when :|||
while |||
write()|||
writeBuffer|||
writeBytes(|||
writeChars()|||
writeFile()|||
writeLine(|||
xor |||
yield |||
